package ru.hacker.concurrency.home;

/**
 * Пусть у вас будет банк в виде хранилища. Основной счет будет представлен
 * числом Long. Пусть у вас будет минимально допустимая сумма, ниже которой вы не сможете
 * выдавать запрашиваемую сумму людям (потребители) до тех пор, пока на основном счете банка не будет достаточная
 * сумма для выдачи. Это потребители денежных средств.
 * Если клиент просит больше, чем есть на текущий момент свободных средств. А свободные средства
 * рассчитывать исходя из разницы минимально допустимого остатка и текущего на данный момент баланса.
 * И пусть вкладчики (производители), которые смогут класть в банк любую сумму денег.
 * При этом они не могут превысить максимально допустимый объем хранилища, в противном случае они
 * должны ожидать, когда сумма станет меньше.
 * Если же вкладчик хочет положить сумму, которая вместе с основным текущим балансом превышает
 * максимально допустимую сумму, тогда он также должен ожидать своей очереди до тех пор, пока
 * не появится возможность положить эту сумму.
 */
public class Start {
}
